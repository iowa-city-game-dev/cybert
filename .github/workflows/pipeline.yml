name: Build & Deploy
on: push
jobs:
  getVersion:
    name: Get version
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repo
        id: checkoutRepo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get commit ID
        id: getCommitId
        run: echo "::set-output name=commitId::$(git rev-parse --short=6 HEAD)"
      - name: Get version
        id: getVersion
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          major_pattern: (semver:bump-major)
          minor_pattern: (semver:bump-minor)
      - name: Set version
        id: setVersion
        run: echo "version=${{steps.getVersion.outputs.major}}.${{steps.getVersion.outputs.minor}}.${{steps.getVersion.outputs.patch}}" >> $GITHUB_ENV
    outputs:
      version: ${{env.version}}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: getVersion
    timeout-minutes: 5
    steps:
      - name: Checkout repo
        id: checkoutRepo
        uses: actions/checkout@v2
      - name: Set project version
        id: setProjectVersion
        run: npm --no-git-tag-version version ${{needs.getVersion.outputs.version}}
      - name: Build image
        id: buildImage
        run: >
          docker build -t registry.heroku.com/cybert/worker . &&
          docker save --output cybert-image.tar registry.heroku.com/cybert/worker
      - name: Store image
        id: storeImage
        if: ${{github.ref == 'refs/heads/main'}}
        uses: actions/upload-artifact@v2
        with:
          name: cybert-image
          path: cybert-image.tar
  deploy:
    name: Deploy
    if: ${{github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    steps:
      - name: Restore image
        id: restoreImage
        uses: actions/download-artifact@v2
        with:
          name: cybert-image
      - name: Delete stored image
        id: deleteStoredImage
        uses: joutvhu/delete-artifact@v1
        with:
          name: cybert-image
      - name: Deploy
        id: deploy
        env:
          HEROKU_AUTH_TOKEN: ${{secrets.herokuAuthToken}}
        run: >
          docker load --input cybert-image.tar &&
          docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com &&
          docker push registry.heroku.com/cybert/worker &&
          heroku container:release worker
  pushVersionTag:
    name: Push version tag
    runs-on: ubuntu-latest
    needs:
      - getVersion
      - deploy
    timeout-minutes: 5
    steps:
      - name: Checkout repo
        id: checkoutRepo
        uses: actions/checkout@v2
      - name: Push version tag
        id: pushVersionTag
        run: >
          git tag v${{needs.getVersion.outputs.version}} &&
          git push origin v${{needs.getVersion.outputs.version}}
