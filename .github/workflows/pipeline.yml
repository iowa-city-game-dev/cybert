name: Build & Deploy
on: push
jobs:
  getVersion:
    name: Get version
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repo
        id: checkoutRepo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get version
        id: getVersion
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          major_pattern: (semver:bump-major)
          minor_pattern: (semver:bump-minor)
      - name: Set version
        id: setVersion
        run: echo "version=${{steps.getVersion.outputs.major}}.${{steps.getVersion.outputs.minor}}.${{steps.getVersion.outputs.patch}}" >> $GITHUB_ENV
    outputs:
      version: ${{env.version}}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: getVersion
    timeout-minutes: 5
    steps:
      - name: Checkout repo
        id: checkoutRepo
        uses: actions/checkout@v3
      - name: Set project version
        id: setProjectVersion
        run: npm --no-git-tag-version version ${{needs.getVersion.outputs.version}}
      - name: Build image
        id: buildImage
        run: docker build .
  deploy:
    name: Deploy
    if: ${{github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    needs:
      - getVersion
      - build
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        id: checkoutRepo
        uses: actions/checkout@v3
      - name: Set project version
        id: setProjectVersion
        run: npm --no-git-tag-version version ${{needs.getVersion.outputs.version}}
      - name: Set up flyctl
        id: setUpFlyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1.4
      - name: Deploy
        id: deploy
        env:
          FLY_API_TOKEN: ${{secrets.FLY_API_TOKEN}}
        run: flyctl deploy --remote-only
  pushVersionTag:
    name: Push version tag
    runs-on: ubuntu-latest
    needs:
      - getVersion
      - deploy
    timeout-minutes: 5
    steps:
      - name: Checkout repo
        id: checkoutRepo
        uses: actions/checkout@v3
      - name: Push version tag
        id: pushVersionTag
        run: >
          git tag v${{needs.getVersion.outputs.version}} &&
          git push origin v${{needs.getVersion.outputs.version}}
